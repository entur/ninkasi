apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.identifier }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          env:
            - name: TZ
              value: Europe/Oslo
            - name: CONFIG_URL
              value: /etc/application-config/config.json
            - name: NODE_ENV
              value: production
            - name: port
              value: '{{ .Values.service.http.internalPort }}'
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          volumeMounts:
            - mountPath: /etc/application-config
              name: application-config
              readOnly: true
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_health
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: application-config
          configMap:
            name: {{ .Values.configMapMount.name }}
            defaultMode: 420

